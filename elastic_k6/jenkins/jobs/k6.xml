<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.42">
  <actions>
    <org.jenkinsci.plugins.workflow.multibranch.JobPropertyTrackerAction plugin="workflow-multibranch@2.26">
      <jobPropertyDescriptors>
        <string>hudson.model.ParametersDefinitionProperty</string>
        <string>com.sonyericsson.rebuild.RebuildSettings</string>
        <string>jenkins.model.BuildDiscarderProperty</string>
      </jobPropertyDescriptors>
    </org.jenkinsci.plugins.workflow.multibranch.JobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.32">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>24</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>THREAD</name>
          <defaultValue>15</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DURATION</name>
          <defaultValue>600</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>FILE</name>
          <defaultValue>Script</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>IMPORT_DASHBOARD</name>
          <choices>
            <string>YES</string>
            <string>NO</string>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2633.v6baeedc13805">
    <script>import java.util.regex.Pattern

properties(
    [
        [$class: &apos;RebuildSettings&apos;, 
        autoRebuild: false, 
        rebuildDisabled: false], 
        buildDiscarder(
            logRotator(
                artifactDaysToKeepStr: &apos;&apos;, 
                artifactNumToKeepStr: &apos;&apos;, 
                daysToKeepStr: &apos;&apos;, 
                numToKeepStr: &apos;24&apos;)), 
        parameters([string(defaultValue: params.THREAD?:&quot;&quot;, name: &apos;THREAD&apos;), 
        string(defaultValue: params.DURATION?:&quot;&quot;, name: &apos;DURATION&apos;),
        string(defaultValue: params.FILE?:&quot;&quot;, name: &apos;FILE&apos;),
        choice(choices: [&apos;YES&apos;, &apos;NO&apos;], name: &apos;IMPORT_DASHBOARD&apos;)
    ])
])

node{
    stage(&quot;delete dir&quot;){
        deleteDir();
        if(&quot;${IMPORT_DASHBOARD}&quot;.equals(&quot;YES&quot;)){
            sh &apos;curl -X POST k6-elastic-apm-kibana:5601/api/saved_objects/_import -H &quot;kbn-xsrf: true&quot; --form file=@/var/k6.ndjson&apos;
        };
    }
    stage(&quot;git download&quot;){
        git branch: &apos;master&apos;, url: &apos;https://github.com/youketero/K6_performance_testing&apos;
    }
    stage(&quot;run jmeter test&quot;){
        Date startDate = new Date()
        echoStartTest(startDate)
        startDateString = date(startDate)
        def sTimestamp = System.currentTimeMillis().toString()
        sh &apos;docker run --rm --volumes-from=k6-elastic-jenkins -i k6 run ${WORKSPACE}/${FILE}.js --out csv=${WORKSPACE}/report-k6_${BUILD_NUMBER}.csv&apos;
        Date endDate = new Date();
        echo endDate.toString()
        echoEndTest(endDate)
        endDateString = date(endDate)
		
         //get runtime 
		String runtime = getDuration(endDate,startDate)
        echo &quot;Test run time:&quot; + runtime
        def eTimestamp = System.currentTimeMillis().toString()
        // Kibana links	
        echo &quot;Kibana Dashboard URL:&quot; + getKibanaDashboardUrl(startDateString, endDateString)
        echo &quot;Kibana Metric Beat URL:&quot; + getKibanaMetricBeatUrl()
    }
    stage(&quot;archive artifacts&quot;){
        archiveArtifacts artifacts: &quot;report-k6_${BUILD_NUMBER}.csv, followSymlinks: false&quot;
    }
}

def getKibanaDashboardUrl(startDateString, endDateString){
    def response = sh(script:&apos;curl -X GET k6-elastic-apm-kibana:5601/api/saved_objects/_find?type=dashboard&apos;, returnStdout: true)
    def result = (response =~ &apos;dashboard&quot;,&quot;id&quot;:&quot;(.{36})&quot;,&quot;attr&apos;).findAll()
    start = URLEncoder.encode(startDateString,&quot;UTF-8&quot;)
    end = URLEncoder.encode(endDateString,&quot;UTF-8&quot;)
    return &quot;http://localhost:5601/app/kibana#/dashboard/&quot; + result[0].get(1) + &quot;?_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:&apos;${start}&apos;&apos;,to:&apos;${end}&apos;))&quot;
}

def getKibanaMetricBeatUrl(){
    return &quot;http://localhost:5601/app/infra#/infrastructure/inventory&quot;
}

def date(time){
    return time.format(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSZ&quot;).toString()
}

def echoStartTest(time){
    echo &quot;Start JMeter test:&quot; + time.toString()
}

def echoEndTest(time){
    echo &quot;End JMeter test:&quot; + time.toString()
}

String getDuration(Date endDate,Date startDate){
	return groovy.time.TimeCategory.minus(endDate, startDate).toString()
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>